{
  "hash": "63738f77930eb0658dd55df3413d2a0b",
  "result": {
    "markdown": "---\ntitle: \"QuartoEstudo\"\nauthor: \"Jazzyjon\"\ndate: \"12/18/2022\"\nformat: \n  html: \n    code-fold: true\n    fig-height: 4\n    fig-width: 5\n---\n\n\nEsse foi um primeiro teste.\nVou tentar colocar um mapa interativo, mesmo que não tendo nada a ver.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(readxl)\nlibrary(writexl)\nlibrary(sf)\nlibrary(fuzzyjoin)\nlibrary(clock)\nlibrary(ggthemes)\nlibrary(showtext)\nlibrary(RColorBrewer)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\nfont_add(family = \"univers\", regular = \"C:/Windows/Fonts/univer.TTF\")\n\ntheme_set(\n  theme_igray() + \n    theme(plot.title = element_text(family = \"univers\", face = \"bold\", size = 11, hjust = 0.5, vjust = 0.5, lineheight = 1.1, margin = margin(12, 0, 12, 0)),\n          legend.position = \"bottom\",\n          legend.title = element_blank(),\n          legend.background = element_rect(fill = \"white\"),\n          legend.text = element_text(family = \"univers\", face = \"plain\", size = 9, margin = margin(0, 15, 0, 5)),\n          legend.key.width = unit(1.5, \"cm\"),\n          plot.background = element_rect(fill = \"#d0cece\"),\n          plot.margin = margin(t = 0, r = 40, b = 0, l = 10 ),\n          axis.title = element_text(family = \"univers\", face = \"plain\", size = 9),\n          axis.text = element_text(family = \"univers\", face = \"plain\", size = 7)))\n\narq_excel <- \"W:/DGC_ACERVO_CGEO/PROJETOS_EM_ANDAMENTO/Cemaden/BOLSISTAS/Joaquim/AtlasNacional/Alertas/AlertasCemaden2012-2021.xlsx\"\nmunicipios <- \"W:/DGC_ACERVO_CGEO/PROJETOS_EM_ANDAMENTO/Cemaden/BOLSISTAS/Joaquim/AtlasNacional/BR_Municipios_2021/BR_Municipios_2021.shp\"\n\nplanilha <- read_excel(arq_excel)\n\nTot_Mun <- planilha %>%\n  group_by(`Código IBGE`, Evento) %>%\n  summarise(Tot_Event = n()) %>%\n  mutate(Evento = ifelse(Evento == \"Geo/Hidro\", \"Hidrogeo\", Evento)) %>%\n  pivot_wider(names_from = Evento, values_from = Tot_Event, values_fill = 0) %>%\n  mutate(tot_geo = Geo + Hidrogeo, tot_hidro = Hidro + Hidrogeo)\n  \nMed_GdReg_data <- planilha %>%\n  mutate(dataref = date_group(as.Date(planilha$Data), \"month\"),\n         mes = factor(date_format(dataref, format = \"%m\"), \n                      labels = c(\"Jan\", \"Fev\", \"Mar\", \"Abr\", \"Mai\", \"Jun\", \"Jul\", \"Ago\", \"Set\", \"Out\", \"Nov\", \"Dez\")),\n         GdReg = factor(as.numeric(substr(`Código IBGE`, 1, 1)), labels = c(\"N\", \"NE\", \"SE\", \"S\", \"CO\")),\n         geologico = ifelse(Evento %in% c(\"Geo\", \"Geo/Hidro\"), 1, 0),\n         hidrologico = ifelse(Evento %in% c(\"Hidro\", \"Geo/Hidro\"), 1, 0)) %>%\n  group_by(GdReg, mes, dataref) %>%\n  summarise(Tot_Event = n(), Tot_geo = sum(geologico), Tot_hidro = sum(hidrologico)) %>%\n  ungroup() %>%\n  group_by(GdReg, mes) %>%\n  summarise(Media_geo = mean(Tot_geo), Media_hidro = mean(Tot_hidro), Media_Event = mean(Tot_Event)) %>%\n  # manobra esquisita para arrumar a tabela, rever esse código adiante de pivotagem\n  pivot_longer(cols = starts_with(\"Media_\"), names_to = \"Tipo\", values_to = \"Media\") %>%\n  pivot_wider(names_from = c(\"mes\", \"Tipo\"), values_from = Media, values_fill = 0) %>%\n  pivot_longer(cols = !GdReg, names_to = c(\"mes\", \"Tipo\"), names_pattern = \"(.*)_Media_(.*)\", values_to = \"Media\") %>%\n  # até aqui.\n  ungroup() %>%\n  group_by(Tipo, mes) %>%\n  mutate(mes = factor(mes, levels = c(\"Jan\", \"Fev\", \"Mar\", \"Abr\", \"Mai\", \"Jun\", \"Jul\", \"Ago\", \"Set\", \"Out\", \"Nov\", \"Dez\")))\n\n\nMed_Pais_geral <- Med_GdReg_data %>%\n  group_by(Tipo, mes) %>%\n  summarise(Media = sum(Media)) %>%\n  mutate(GdReg = \"Brasil\") %>%\n  select(GdReg, mes, Tipo, Media)\n\nMed_Geral <- Med_GdReg_data %>%\n  bind_rows(Med_Pais_geral) %>%\n  mutate(GdReg = factor(GdReg, levels = c(\"Brasil\", \"N\", \"NE\", \"SE\", \"S\", \"CO\")))\n\ncores <- c(\"#000000\", brewer.pal(5, \"Set1\"))\nnames(cores) <- c(\"Brasil\", levels(Med_GdReg_data$GdReg))\ncolScale <- scale_color_manual(name = \"GdReg\", labels = c(\"Brasil\", \"Norte\", \"Nordeste\", \"Sudeste\", \"Sul\", \"Centro-Oeste\"), values = cores)\nlineScale <- scale_linetype_manual(name = \"GdReg\", labels = c(\"Brasil\", \"Norte\", \"Nordeste\", \"Sudeste\", \"Sul\", \"Centro-Oeste\"), values = c(2, 1, 1, 1, 1, 1))\n\ngraf_hidro <- Med_Geral %>%\n  filter(Tipo == \"hidro\") %>%\n  ggplot(aes(x = mes, y = Media, colour = GdReg, group = GdReg, linetype = GdReg)) +\n  geom_line(stat = \"identity\", position = \"identity\", size = 0.8, ) +\n  labs(title = \"Média mensal de alertas de risco hidrológico,\\npor Grandes Regiões - 2012-2021\") +\n  xlab(\"Mês\") +\n  ylab(\"Alertas\") +\n  lineScale +\n  colScale +\n  theme(legend.margin = margin(0, 40, 0, 40))\n\ngraf_geo <- Med_Geral %>%\n  filter(Tipo == \"geo\") %>%\n  ggplot(aes(x = mes, y = Media, colour = GdReg, group = GdReg, linetype = GdReg)) +\n  geom_line(stat = \"identity\", position = \"identity\", size = 0.8, ) +\n  labs(title = \"Média mensal de alertas de risco geológico,\\npor Grandes Regiões - 2012-2021\") +\n  xlab(\"Mês\") +\n  ylab(\"Alertas\") +\n  lineScale +\n  colScale +\n  theme(legend.margin = margin(0, 40, 0, 40))\n\ngraf_geral <- Med_Geral %>%\n  filter(Tipo == \"Event\") %>%\n  arrange(GdReg) %>%\n  ggplot(aes(x = mes, y = Media, colour = GdReg, group = GdReg, linetype = GdReg)) +\n  geom_line(size = 0.5) +\n  labs(title = \"Média mensal de alertas de risco geohidrológico,\\npor Grandes Regiões - 2012-2021\") +\n  xlab(\"Mês\") +\n  ylab(\"Alertas\") +\n  lineScale +\n  colScale +\n  theme(legend.margin = margin(0, 40, 0, 40)) +\n  facet_wrap(vars(GdReg), nrow = 1)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngraf_hidro\n```\n\n::: {.cell-output-display}\n![Hidrológico](index_files/figure-html/fighidro-1.png){width=480}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngraf_geo\n```\n\n::: {.cell-output-display}\n![Geológico](index_files/figure-html/figgeo-1.png){width=480}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngraf_geral\n```\n\n::: {.cell-output-display}\n![Geral](index_files/figure-html/figgeral-1.png){width=480}\n:::\n:::\n\n\nE continuando, @fighidro, @figgeo e @figgeral rolaram de fazer mas ainda está parado.\n\n## e eis a parte interativa!\n\n\n```{ojs}\n\nbertin = require(\"bertin\")\n\njsonURL = \"https://geoservicos.ibge.gov.br/geoserver/CGEO/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=CGEO%3APARBR2018_BATER_MD&maxFeatures=600000&outputFormat=application%2Fjson\"\n\nbater = d3.json(jsonURL)\n\nviewof selmun = Inputs.select(\n  bater.features.map((d) => d.properties.municipio),\n  {\n    sort: true,\n    unique: true,\n    label: \"Município\"\n  }\n)\n\nmunicipioArray = bater.features.filter((d) => d.properties.municipio == selmun)\n\nmunicipio = ({\n  \"type\":\"FeatureCollection\",\n  \"features\":municipioArray  \n})\n\nsimplemap = bertin.draw({\n  params: { background: \"#bde1f0\", margin: 10 },\n  layers: [{\n      type: \"layer\",\n      geojson: municipio,\n      fill: \"#ff0000\",\n      stroke: \"#ff0000\",\n      strokeWidth: 1,\n      symbol: \"square\",\n      symbol_size: 50\n    },\n    {\n      type: \"tiles\",\n      opacity: 1,\n      style: \"openstreetmap\",\n    }\n  ]\n})\n\n```",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}